{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","switchOn","toggleSwitch","bind","this","setState","className","isOn","onSwitched","React","Component","Switch","switchClass","props","onClick","Bulb","lightClass","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kPAGMA,G,wDACJ,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXC,UAAU,GAGZ,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBAPR,E,2DAWZC,KAAKC,SAAS,CAAEJ,UAAWG,KAAKJ,MAAMC,a,+BAItC,OACE,sBAAKK,UAAU,SAAf,UACE,cAAC,EAAD,CAAQC,KAAMH,KAAKJ,MAAMC,SAAUO,WAAYJ,KAAKF,eACpD,cAAC,EAAD,CAAMK,KAAMH,KAAKJ,MAAMC,kB,GAnBbQ,IAAMC,YAwBlBC,E,uKAEA,IAAIC,EAAcR,KAAKS,MAAMN,KAAO,qBAAuB,cAC3D,OACE,qBAAKD,UAAWM,EAAhB,SACE,uBAAMN,UAAU,SAASQ,QAASV,KAAKS,MAAML,WAA7C,UACE,sBAAMF,UAAU,mBAAhB,iBACA,sBAAMA,UAAU,kBAAhB,yB,GAPSG,IAAMC,WAcrBK,E,uKAEJ,IAAIC,EAAaZ,KAAKS,MAAMN,KAAO,gBAAkB,iBACrD,OACE,qBAAKD,UAAWU,Q,GAJDP,IAAMC,WAQVX,ICrCAkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,YCCdQ,IAASC,OACP,cAAC,EAAD,IAEAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a5fe964d.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    \n    this.state = {\n      switchOn: false\n    }\n    \n    this.toggleSwitch = this.toggleSwitch.bind(this);\n  }\n\n  toggleSwitch() {\n    this.setState({ switchOn: !this.state.switchOn });\n  }\n\n  render() {\n    return (\n      <div className=\"layout\">\n        <Switch isOn={this.state.switchOn} onSwitched={this.toggleSwitch} />\n        <Bulb isOn={this.state.switchOn} />\n      </div>\n    )\n  }\n}\nclass Switch extends React.Component {\n  render() {\n      var switchClass = this.props.isOn ? \"cube-switch active\" : \"cube-switch\";\n      return (\n        <div className={switchClass}>\n          <span className=\"switch\" onClick={this.props.onSwitched}>\n            <span className=\"switch-state off\">Off</span>\n            <span className=\"switch-state on\">On</span>\n          </span>\n        </div>\n      );\n  }\n}\n\nclass Bulb extends React.Component {\nrender() {\n  let lightClass = this.props.isOn ? \"light-bulb on\" : \"light-bulb off\";\n  return (\n    <div className={lightClass}></div>\n  )\n}\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport 'font-awesome/css/font-awesome.min.css';\n\nReactDOM.render(\n  <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}